import React from 'react'
import styles from './News.module.scss';
import { Swiper, SwiperSlide } from 'swiper/react';
import { useSelector } from 'react-redux';
import SwiperCore, { Pagination, A11y } from 'swiper';
import { useAppDispatch } from '../../Redux/store';
import 'swiper/components/pagination/pagination.scss';
import 'swiper/swiper.scss';
import { fetchPosts } from '../../Redux/post/asyncActions';
import { selectPostsData } from '../../Redux/post/selectors';
import { Skeleton } from './Skeleton'

SwiperCore.use([Pagination, A11y]);

const News: React.FC = () => {


  const dispatch = useAppDispatch();
  const { items, status } = useSelector(selectPostsData);
  const isPostsLoading = status === 'loading';

  React.useEffect(() => {
    dispatch(fetchPosts());
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  const formatter = new Intl.DateTimeFormat("en-GB", {
    year: "numeric",
    month: "long",
    day: "2-digit"
  });

  const skeletons = [...new Array(3)].map((_, index) => <Skeleton key={index} />);
  return (
    <div className={styles.root}>
      <Swiper
        spaceBetween={30}
        slidesPerView={3}
        pagination={{ clickable: true }}
        className={styles.swiper}>
        {isPostsLoading ? (<SwiperSlide className={styles.slide}>{skeletons}</SwiperSlide>) :
          items.map((obj: any) => (<SwiperSlide key={obj._id} className={styles.slide}>
            <img src={obj.imageUrl} alt={obj._id} />
            <div className={styles.content}>
              <div className={styles.user}>
                <img src={obj.user_published.avatarUrl} alt="" />
                <div className={styles.userName}>
                  <h2>{obj.user_published.fullName}</h2>
                  <p>{formatter.format(Date.parse(obj.createdAt))}</p>
                </div>

              </div>
              <h1 className={styles.title}> {obj.title} {obj.description}
              </h1>

              <div className={styles.view}>

                <svg width="26" height="26" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M16 20C18.2091 20 20 18.2091 20 16C20 13.7909 18.2091 12 16 12C13.7909 12 12 13.7909 12 16C12 18.2091 13.7909 20 16 20Z" fill="#C9C9C9" />
                  <path d="M30.94 15.66C29.7638 12.6176 27.722 9.98662 25.0668 8.09209C22.4116 6.19756 19.2595 5.12257 16 5C12.7405 5.12257 9.58839 6.19756 6.9332 8.09209C4.27802 9.98662 2.23616 12.6176 1.06 15.66C0.980569 15.8797 0.980569 16.1203 1.06 16.34C2.23616 19.3824 4.27802 22.0134 6.9332 23.9079C9.58839 25.8024 12.7405 26.8774 16 27C19.2595 26.8774 22.4116 25.8024 25.0668 23.9079C27.722 22.0134 29.7638 19.3824 30.94 16.34C31.0194 16.1203 31.0194 15.8797 30.94 15.66V15.66ZM16 22.5C14.7144 22.5 13.4577 22.1188 12.3888 21.4046C11.3199 20.6903 10.4868 19.6752 9.99479 18.4874C9.50282 17.2997 9.37409 15.9928 9.6249 14.7319C9.8757 13.471 10.4948 12.3128 11.4038 11.4038C12.3128 10.4948 13.471 9.8757 14.7319 9.6249C15.9928 9.37409 17.2997 9.50281 18.4874 9.99478C19.6752 10.4868 20.6903 11.3199 21.4046 12.3888C22.1188 13.4577 22.5 14.7144 22.5 16C22.4974 17.7231 21.8117 19.3749 20.5933 20.5933C19.3749 21.8117 17.7231 22.4974 16 22.5V22.5Z" fill="#C9C9C9" />
                </svg>

                <span>{obj.viewsCount}</span>
              </div>
              <div className={styles.comments}>
                <span>2</span>

                <svg width="28" height="28" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <g clipPath="url(#clip0_350_5)">
                    <path d="M11.7857 2.72727C10.0781 2.72727 8.48214 3.09659 6.99777 3.83523C5.51339 4.57386 4.33315 5.57528 3.45703 6.83949C2.58092 8.10369 2.14286 9.46023 2.14286 10.9091C2.14286 12.0739 2.43862 13.196 3.03013 14.2756C3.62165 15.3551 4.45312 16.2926 5.52455 17.0881L7.14844 18.2813L6.5625 20.071C6.94196 19.7869 7.28795 19.5099 7.60045 19.2401L8.33705 18.5795L9.22433 18.7926C10.0949 18.9915 10.9487 19.0909 11.7857 19.0909C13.4933 19.0909 15.0893 18.7216 16.5737 17.983C18.058 17.2443 19.2383 16.2429 20.1144 14.9787C20.9905 13.7145 21.4286 12.358 21.4286 10.9091C21.4286 9.46023 20.9905 8.10369 20.1144 6.83949C19.2383 5.57528 18.058 4.57386 16.5737 3.83523C15.0893 3.09659 13.4933 2.72727 11.7857 2.72727ZM11.7857 0C13.9174 0 15.8901 0.486506 17.7037 1.45952C19.5173 2.43253 20.9487 3.7571 21.9978 5.43324C23.0469 7.10938 23.5714 8.93466 23.5714 10.9091C23.5714 12.8835 23.0469 14.7088 21.9978 16.3849C20.9487 18.0611 19.5173 19.3857 17.7037 20.3587C15.8901 21.3317 13.9174 21.8182 11.7857 21.8182C10.8259 21.8182 9.84375 21.7045 8.83929 21.4773C7.45536 22.7273 5.90402 23.6364 4.18527 24.2045C3.78348 24.3324 3.30357 24.446 2.74554 24.5455H2.69531C2.57254 24.5455 2.45815 24.4886 2.35212 24.375C2.24609 24.2614 2.18192 24.1122 2.1596 23.9276C2.14844 23.8849 2.14286 23.8388 2.14286 23.7891C2.14286 23.7393 2.14565 23.6932 2.15123 23.6506C2.15681 23.608 2.16797 23.5653 2.18471 23.5227L2.22656 23.4162L2.28516 23.299L2.35212 23.1925L2.42746 23.0859L2.49442 22.9901C2.55022 22.9048 2.67857 22.7273 2.87946 22.4574C3.08036 22.1875 3.22545 21.978 3.31473 21.8288C3.40402 21.6797 3.52958 21.4737 3.69141 21.2109C3.85324 20.9482 3.99275 20.6747 4.10993 20.3906C4.22712 20.1065 4.34152 19.794 4.45312 19.4531C3.0692 18.4304 1.98103 17.1733 1.18862 15.6818C0.396205 14.1903 0 12.5994 0 10.9091C0 8.93466 0.524554 7.10938 1.57366 5.43324C2.62277 3.7571 4.05413 2.43253 5.86775 1.45952C7.68136 0.486506 9.65402 0 11.7857 0ZM25.5469 24.9077C25.6585 25.2486 25.7729 25.5611 25.8901 25.8452C26.0073 26.1293 26.1468 26.4027 26.3086 26.6655C26.4704 26.9283 26.596 27.1342 26.6853 27.2834C26.7746 27.4325 26.9196 27.642 27.1205 27.9119C27.3214 28.1818 27.4498 28.3594 27.5056 28.4446C27.5167 28.4588 27.5391 28.4908 27.5725 28.5405C27.606 28.5902 27.6311 28.6257 27.6479 28.647C27.6646 28.6683 27.6869 28.7038 27.7148 28.7536C27.7427 28.8033 27.7623 28.8423 27.7734 28.8707L27.8153 28.9773L27.8488 29.1051L27.8571 29.2436L27.8404 29.3821C27.8069 29.581 27.7344 29.7372 27.6228 29.8509C27.5112 29.9645 27.3884 30.0142 27.2545 30C26.6964 29.9006 26.2165 29.7869 25.8147 29.6591C24.096 29.0909 22.5446 28.1818 21.1607 26.9318C20.1562 27.1591 19.1741 27.2727 18.2143 27.2727C15.1897 27.2727 12.5558 26.3352 10.3125 24.4602C10.9598 24.517 11.4509 24.5455 11.7857 24.5455C13.5826 24.5455 15.3069 24.2259 16.9587 23.5866C18.6105 22.9474 20.0837 22.0313 21.3783 20.8381C22.7734 19.5313 23.8449 18.0256 24.5926 16.321C25.3404 14.6165 25.7143 12.8125 25.7143 10.9091C25.7143 9.81534 25.5859 8.7358 25.3292 7.67045C26.769 8.67898 27.9074 9.94318 28.7444 11.4631C29.5815 12.983 30 14.6165 30 16.3636C30 18.0682 29.6038 19.6626 28.8114 21.147C28.019 22.6314 26.9308 23.8849 25.5469 24.9077Z" fill="#C9C9C9" />
                  </g>
                  <defs>
                    <clipPath id="clip0_350_5">
                      <rect width="30" height="30" fill="white" />
                    </clipPath>
                  </defs>
                </svg>


              </div>
            </div>

          </SwiperSlide>))
        }






      </Swiper>
    </div>
  );
};

export default News;

